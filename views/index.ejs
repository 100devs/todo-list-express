<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Todo List: </h1>
    <ul class="todoItems">
    <% for(let i=0; i < items.length; i++) {%>
        <li class="item">
            <% if(items[i].completed === true) {%>
                <span class='completed'><%= items[i].thing %></span>
            <% }else{ %>
                <span><%= items[i].thing %></span>
            <% } %>    
            <span class='fa fa-trash'></span>
        </li>
    <% } %>
    </ul>

 /*^^ So what the above code does is that it will iterate over the array of items and render them onto the page, but it will also check to see if each item's 
 'completed; key is marked to true or false. When it is discoverd that it is marked to true, it gives the item the class of completed as well as the class of item 
 before rendering them. This allows the code to make the distinction between completed and uncompleted items when marking them one or the other. The list is updated 
 whenever the page refreshes.
 */

    <h2>Left to do: <%= left %></h2>

//^^This is the location the number of items left to be completed will be rendered. This number is derived from the server JS

    <h2>Add A Todo:</h2>

    <form action="/addTodo" method="POST">
        <input type="text" placeholder="Thing To Do" name="todoItem">
        <input type="submit">
    </form>

//This form allows the addition of new items to the list, making a request to the addTodo directory. The request is sent to the server as request.body.todoItem where
//todoItem is the name of the item you wish to add to the collection and its 'completed' key is default set to 'false'

    <script src='js/main.js'></script>
</body>
</html>
