<!--Files in the View folder are rendered by the JavaScript runtime “dynamically”, requiring processing of data to generate a response body (usually HTML). The view could be rendered by any http endpoint, or other view, by name.-->
<!DOCTYPE html> <!--Telling the broswer what type of document will be shown-->
<html lang="en"><!--starting the HTML tage and saying that the language is English-->
<head><!--starting the head tag to store our metadata-->
    <meta charset="UTF-8"><!--indicates what character set should be used-->
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><!--Sets appropriate compatibility for Microsoft browsers-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"><!--sets the width of available viewing area to the width of the device screen-->
    <title>Document</title><!--Assign a title that appears on the browser tab-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"><!--creates a link to the Font Awesome Icon library-->
    <link rel="stylesheet" href="css/style.css"><!--Creates a link to the local stylesheet in the public folder-->
</head><!--closing the head tag-->
<body> <!--main section for content displayed-->
    <!DOCTYPE html> <!--This may be a typo-->
<html lang="en"><!--This may be a typo-->
<head><!--This may be a typo-->
    <meta charset="UTF-8"><!--This may be a typo-->
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><!--This may be a typo-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"><!--This may be a typo-->
    <title>Document</title><!--This may be a typo-->
</head><!--This may be a typo-->
<body><!--main section for content displayed-->
    <h1>Todo List: </h1><!--Main title displayed on page-->
    <ul class="todoItems"> <!--Create unordered list and assign class to the list-->
    <% for(let i=0; i < items.length; i++) {%> <!--Use EJS to start a FOR Loop-->
        <li class="item"><!--Create a list item with the class of item-->
            <% if(items[i].completed === true) {%><!--EJS to check if an item in an array with a completed property is true-->
                <span class='completed'><%= items[i].thing %></span><!--Creating an inline element with a class and adding EJS to display the name of the task-->
            <% }else{ %><!--EJS for the Else clause of our if statement-->
                <span><%= items[i].thing %></span><!--adding EJS to display the name of the task with NO CLASS-->
            <% } %>    <!--EJS to close the ELSE statement-->
            <span class='fa fa-trash'></span> <!--Display Font Awesome Icon of trash can inside a span after each added List item-->
        </li><!--Closing our List Item-->
    <% } %><!--EJS to close the FOR Loop-->
    </ul><!--Closing our unordered list-->

    <h2>Left to do: <%= left %></h2> <!--Create a second level heading tag with text and using EJS to display a variable showing how many tasks are left to complete-->

    <h2>Add A Todo:</h2> <!--Creating a seconf level header with text-->

    <form action="/addTodo" method="POST"> <!--Create a form with a POST(create) method that goes to the /addTodo route (this allows us to hit the correct place in our server to grab the correct information)-->
        <input type="text" placeholder="Thing To Do" name="todoItem"> <!--create an input box that accepts text with a default text inside of it before you type anything. The input box is given a name for later reference-->
        <input type="submit"> <!--Gives the form a Submit button-->
    </form> <!--Closing the form tag-->
    

    <script src='js/main.js'></script> <!--links to the main.js file in the js folder in the public folder-->
</body> <!--closing the body tag-->
</html> <!--closing the html tag-->
