<!-- rendering the html in the browser using ejs so it a dynamic html. It allows us to use JS embedded. EJS (Embedded JavaScript Templating) is one of the most popular template engines for JavaScript. -->

<!DOCTYPE html><!-- creating a html document, declaring the document type as html -->
<html lang="en"><!-- setting the html language for the display/site as english -->
<head><!-- start of the head tag to store our metadata, this part is hidden and won't be displayed -->
    <meta charset="UTF-8"><!-- setting the metadata character encoding type. -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><!-- about browser compatibility, especialy Edge -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"><!-- setting the default viewport for the page. size and min. the default viewing area. -->
    <title>Document</title><!-- set the site title, this will be displayed in the tab.  -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"><!--  -->
    <link rel="stylesheet" href="css/style.css"><!--  -->
</head><!--  -->
<body> <!-- body tag creates a space for main content that is displayed. -->
    <h1>Todo List: </h1> <!-- main title disaplyed on page at highest size -->
    <ul class="todoItems"> <!-- unordered list with a class of todoItems -->
    <% for(let i=0; i < items.length; i++) {%> <!-- use ejs to start a for loop -->
        <li class="item"> <!-- create a list item with a class of Item -->
            <% if(items[i].completed === true) {%> <!-- using ejs, set up a conditional to see if items at index i in an array is completed is true-->
                <span class='completed'><%= items[i].thing %></span> <!-- span tag is a small inline element with a class. adding ejs to display the name of the task. using array notation. property of our array and will be pulled and added to the span -->
            <% }else{ %> <!-- ejs for the else clause. if the complete is false -->
                <span><%= items[i].thing %></span> <!-- displays the item at i index in a span. without a class. -->
            <% } %>    <!-- ejs to close the else statement -->
            <span class='fa fa-trash'></span> <!-- Display Font Awesome Icon of trash can inside a span-->
        </li><!-- end of list -->
    <% } %> <!-- ejs to end the for loop -->
    </ul><!-- ending the unordered list -->

    <h2>Left to do: <%= left %></h2><!-- creating a heading tag, level two using ejs-->

    <h2>Add A Todo:</h2><!-- creating a heading tag at level 2 -->

    <form action="/addTodo" method="POST"> <!-- Create a form with a post methode, that will go the route /addToDo. post means to put something somewhere, the information will probably be stored there. it will be listening for this post method and handling it correctly. forms can't update (or PUTS), no built in method -->
        <input type="text" placeholder="Thing To Do" name="todoItem"> <!-- using input tag, setting the input type to text, placeholder as "thing to do" and give a name call todoItem, we might be able reference it later-->
        <input type="submit"> <!-- setting the input type to be submit, saves you from having to create the button tag-->
    </form> <!-- closing the form tag-->
    

    <script src='js/main.js'></script> <!-- attaching the main.js file in the public folder, to this html file. -->
</body><!-- closing the boody -->
</html> <!-- closing the html file -->
