<!-- The server uses this file to render the html for the client. Because of our routes setup, the client will request this file when it first loads
and it will refresh whenever a change is made to the database. EJS allows us to dynamically generate the html with our to do list items -->


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Todo List: </h1>

    <ul class="todoItems">
    <% for(let i=0; i < items.length; i++) {%>
    <!-- Runs a for loop using ejs syntax. Its purpose is to iterate through the database array to fill out the todo list -->

        <li class="item">
            <% if(items[i].completed === true) {%>
                <span class='completed'><%= items[i].thing %></span>
            <!-- Creates a span with class completed if the item is completed. -->
            <% }else{ %>
                <span><%= items[i].thing %></span>
            <!-- Creates a span with no class (like my mom) if the item is not completed. -->
            <% } %>    
            <span class='fa fa-trash'></span>
            <!-- Creates the delete button -->
        </li>
    <% } %>
    </ul>

    <h2>Left to do: <%= left %></h2>
    <!-- Displays the number of items with completed property set to false -->

    <h2>Add A Todo:</h2>

    <form action="/addTodo" method="POST">
        <input type="text" placeholder="Thing To Do" name="todoItem">
        <input type="submit">
    </form>

    <!-- The form for adding items to the todo list. the action is the path to the controller that will handle the request. 
    The method is POST because we are sending data to the server. -->

    <script src='js/main.js'></script>
</body>
</html>
